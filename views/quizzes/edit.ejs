<div class="row mb-4">
    <div class="col-md-12">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/quizzes">Quizzes</a></li>
                <li class="breadcrumb-item"><a href="/quizzes/<%= quiz._id %>"><%= quiz.title %></a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Edit Quiz: <%= quiz.title %></h4>
            </div>
            <div class="card-body">
                <% if (typeof error !== 'undefined' && error) { %>
                    <div class="alert alert-danger"><%= error %></div>
                <% } %>
                
                <form id="edit-quiz-form" action="/quizzes/<%= quiz._id %>/update" method="POST" enctype="multipart/form-data">
                    <!-- Quiz Basic Information -->
                    <div class="mb-4">
                        <h5>Quiz Information</h5>
                        <hr>
                        <div class="mb-3">
                            <label for="title" class="form-label">Quiz Title</label>
                            <input type="text" class="form-control" id="title" name="title" value="<%= quiz.title %>" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3"><%= quiz.description %></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="category" class="form-label">Category</label>
                                    <select class="form-select" id="category" name="category">
                                        <% categories.forEach(category => { %>
                                            <option value="<%= category %>" <%= quiz.category === category ? 'selected' : '' %>>
                                                <%= category.charAt(0).toUpperCase() + category.slice(1) %>
                                            </option>
                                        <% }); %>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="isPublic" class="form-label">Quiz Visibility</label>
                                    <select class="form-select" id="isPublic" name="isPublic">
                                        <option value="true" <%= quiz.isPublic ? 'selected' : '' %>>Public</option>
                                        <option value="false" <%= !quiz.isPublic ? 'selected' : '' %>>Private</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="tags" class="form-label">Tags (comma separated)</label>
                            <input type="text" class="form-control" id="tags" name="tags" placeholder="e.g. java, programming, algorithms"
                                value="<%= quiz.tags ? quiz.tags.join(', ') : '' %>">
                        </div>
                        <div class="mb-3">
                            <label for="coverImage" class="form-label">Cover Image (optional)</label>
                            <% if (quiz.coverImage) { %>
                                <div class="mb-2">
                                    <img src="<%= quiz.coverImage %>" alt="Current cover image" class="img-thumbnail" style="max-width: 200px;">
                                    <p class="form-text">Current cover image. Upload a new one to replace.</p>
                                </div>
                            <% } %>
                            <input type="file" class="form-control" id="coverImage" name="coverImage" accept="image/*">
                        </div>
                    </div>
                    
                    <!-- Questions Section -->
                    <div class="mb-4">
                        <h5>Quiz Questions</h5>
                        <hr>
                        <div id="questions-container">
                            <!-- Existing Questions -->
                            <% quiz.questions.forEach((question, index) => { %>
                                <div class="question-card card mb-4">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Question <%= index + 1 %></h5>
                                        <% if (index > 0 || quiz.questions.length > 1) { %>
                                            <button type="button" class="btn btn-sm btn-danger remove-question">Remove</button>
                                        <% } else { %>
                                            <button type="button" class="btn btn-sm btn-danger remove-question" style="display: none;">Remove</button>
                                        <% } %>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <label class="form-label">Question Text</label>
                                            <input type="text" class="form-control question-text" 
                                                name="questions[<%= index %>][questionText]" 
                                                value="<%= question.questionText %>" required>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Question Image (optional)</label>
                                            <% if (question.questionImage) { %>
                                                <div class="mb-2">
                                                    <img src="<%= question.questionImage %>" alt="Current question image" 
                                                        class="question-image-preview" style="display: block; max-width: 200px;">
                                                </div>
                                            <% } else { %>
                                                <img class="question-image-preview" alt="Preview" src="" style="display: none; max-width: 200px;">
                                            <% } %>
                                            <input type="file" class="form-control question-image" name="questionImage_<%= index %>" accept="image/*">
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Question Type</label>
                                            <select class="form-select question-type" name="questions[<%= index %>][questionType]">
                                                <option value="multiple-choice" <%= question.questionType === 'multiple-choice' ? 'selected' : '' %>>Multiple Choice</option>
                                                <option value="true-false" <%= question.questionType === 'true-false' ? 'selected' : '' %>>True/False</option>
                                                <option value="short-answer" <%= question.questionType === 'short-answer' ? 'selected' : '' %>>Short Answer</option>
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Points</label>
                                            <input type="number" class="form-control" name="questions[<%= index %>][points]" 
                                                min="1" max="100" value="<%= question.points || 10 %>">
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Time Limit (seconds)</label>
                                            <input type="number" class="form-control" name="questions[<%= index %>][timeLimit]"
                                                min="5" max="300" value="<%= question.timeLimit || 30 %>">
                                        </div>
                                        
                                        <!-- Options for multiple choice/true-false -->
                                        <div class="options-container" style="<%= (question.questionType === 'multiple-choice' || question.questionType === 'true-false') ? 'display:block' : 'display:none' %>">
                                            <div class="mb-3">
                                                <label class="form-label">Options</label>
                                                <% if (question.options && question.options.length > 0) { %>
                                                    <% question.options.forEach((option, optIndex) => { %>
                                                        <div class="option-group mb-2">
                                                            <div class="input-group">
                                                                <div class="input-group-text">
                                                                    <input type="radio" name="questions[<%= index %>][correctOption]" 
                                                                        value="<%= optIndex %>" <%= option.isCorrect ? 'checked' : '' %>>
                                                                </div>
                                                                <input type="text" class="form-control" 
                                                                    name="questions[<%= index %>][options][<%= optIndex %>][optionText]" 
                                                                    value="<%= option.optionText %>" required>
                                                                <% if (optIndex > 1 || question.options.length > 2) { %>
                                                                    <button type="button" class="btn btn-outline-danger remove-option">X</button>
                                                                <% } else { %>
                                                                    <button type="button" class="btn btn-outline-danger remove-option" style="display: none;">X</button>
                                                                <% } %>
                                                            </div>
                                                        </div>
                                                    <% }); %>
                                                <% } else { %>
                                                    <!-- Default options if no options exist -->
                                                    <div class="option-group mb-2">
                                                        <div class="input-group">
                                                            <div class="input-group-text">
                                                                <input type="radio" name="questions[<%= index %>][correctOption]" value="0" checked>
                                                            </div>
                                                            <input type="text" class="form-control" name="questions[<%= index %>][options][0][optionText]" placeholder="Option 1" required>
                                                            <button type="button" class="btn btn-outline-danger remove-option" style="display: none;">X</button>
                                                        </div>
                                                    </div>
                                                    <div class="option-group mb-2">
                                                        <div class="input-group">
                                                            <div class="input-group-text">
                                                                <input type="radio" name="questions[<%= index %>][correctOption]" value="1">
                                                            </div>
                                                            <input type="text" class="form-control" name="questions[<%= index %>][options][1][optionText]" placeholder="Option 2" required>
                                                            <button type="button" class="btn btn-outline-danger remove-option" style="display: none;">X</button>
                                                        </div>
                                                    </div>
                                                <% } %>
                                                <button type="button" class="btn btn-outline-primary btn-sm add-option">Add Option</button>
                                            </div>
                                        </div>
                                        
                                        <!-- Answer for short answer -->
                                        <div class="short-answer-container" style="<%= question.questionType === 'short-answer' ? 'display:block' : 'display:none' %>">
                                            <div class="mb-3">
                                                <label class="form-label">Correct Answer</label>
                                                <input type="text" class="form-control" name="questions[<%= index %>][correctAnswer]" 
                                                    placeholder="Enter the correct answer" value="<%= question.correctAnswer || '' %>">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                        
                        <button type="button" class="btn btn-outline-primary w-100 mb-4" id="add-question">Add Question</button>
                    </div>
                    
                    <div class="d-grid gap-2 d-md-flex">
                        <button type="submit" class="btn btn-primary flex-grow-1">Save Changes</button>
                        <a href="/quizzes/<%= quiz._id %>" class="btn btn-outline-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Question type change handler
    document.querySelectorAll('.question-type').forEach(select => {
        select.addEventListener('change', function() {
            const card = this.closest('.question-card');
            const optionsContainer = card.querySelector('.options-container');
            const shortAnswerContainer = card.querySelector('.short-answer-container');
            
            if (this.value === 'multiple-choice') {
                optionsContainer.style.display = 'block';
                shortAnswerContainer.style.display = 'none';
            } else if (this.value === 'true-false') {
                optionsContainer.style.display = 'block';
                shortAnswerContainer.style.display = 'none';
                
                // Set up true/false options
                const optionGroups = card.querySelectorAll('.option-group');
                if (optionGroups.length > 2) {
                    // Remove extra options
                    for (let i = 2; i < optionGroups.length; i++) {
                        optionGroups[i].remove();
                    }
                }
                
                // Set first option to "True"
                const firstOption = optionGroups[0].querySelector('input[type="text"]');
                if (firstOption.value.toLowerCase() !== 'true') {
                    firstOption.value = 'True';
                }
                
                // Set second option to "False"
                const secondOption = optionGroups[1].querySelector('input[type="text"]');
                if (secondOption.value.toLowerCase() !== 'false') {
                    secondOption.value = 'False';
                }
                
            } else if (this.value === 'short-answer') {
                optionsContainer.style.display = 'none';
                shortAnswerContainer.style.display = 'block';
            }
        });
    });
    
    // Rest of JavaScript is similar to create.ejs, with some modifications for the edit context
    
    // Add new question
    document.getElementById('add-question').addEventListener('click', function() {
        const questionsContainer = document.getElementById('questions-container');
        const questionCards = questionsContainer.querySelectorAll('.question-card');
        const newIndex = questionCards.length;
        
        // Clone the first question card
        const newQuestionCard = questionCards[0].cloneNode(true);
        
        // Update question number
        newQuestionCard.querySelector('h5').textContent = `Question ${newIndex + 1}`;
        
        // Update input names with new index
        newQuestionCard.querySelectorAll('input, select, textarea').forEach(input => {
            if (input.name) {
                input.name = input.name.replace(/questions\[\d+\]/g, `questions[${newIndex}]`);
                // Update question image name
                if (input.type === 'file' && input.name.includes('questionImage')) {
                    input.name = `questionImage_${newIndex}`;
                }
            }
            
            // Reset values but keep default points and time limit
            if (input.type !== 'radio') {
                if (input.name && input.name.includes('[points]')) {
                    input.value = '10'; // Default points value
                } else if (input.name && input.name.includes('[timeLimit]')) {
                    input.value = '30'; // Default time value
                } else {
                    input.value = '';
                }
            }
        });
        
        // Reset image preview
        const imgPreview = newQuestionCard.querySelector('.question-image-preview');
        if (imgPreview) {
            imgPreview.style.display = 'none';
            imgPreview.src = '';
        }
        
        // Show remove button
        newQuestionCard.querySelector('.remove-question').style.display = 'block';
        
        // Add event listeners to the new question
        addQuestionEventListeners(newQuestionCard);
        
        // Append the new question
        questionsContainer.appendChild(newQuestionCard);
    });
    
    // Add event listeners to all question cards
    document.querySelectorAll('.question-card').forEach(questionCard => {
        addQuestionEventListeners(questionCard);
    });
    
    function addQuestionEventListeners(questionCard) {
        // Remove question
        const removeBtn = questionCard.querySelector('.remove-question');
        if (removeBtn) {
            removeBtn.addEventListener('click', function() {
                if (confirm('Are you sure you want to remove this question?')) {
                    questionCard.remove();
                    
                    // Renumber questions
                    document.querySelectorAll('.question-card').forEach((card, index) => {
                        card.querySelector('h5').textContent = `Question ${index + 1}`;
                        
                        // Update input names
                        card.querySelectorAll('input, select, textarea').forEach(input => {
                            if (input.name) {
                                input.name = input.name.replace(/questions\[\d+\]/g, `questions[${index}]`);
                                // Update question image name
                                if (input.type === 'file' && input.name.includes('questionImage')) {
                                    input.name = `questionImage_${index}`;
                                }
                            }
                        });
                    });
                }
            });
        }
        
        // Add option
        const addOptionBtn = questionCard.querySelector('.add-option');
        if (addOptionBtn) {
            addOptionBtn.addEventListener('click', function() {
                const optionsContainer = this.closest('.options-container');
                const optionGroups = optionsContainer.querySelectorAll('.option-group');
                const newIndex = optionGroups.length;
                
                // Clone the first option
                const newOptionGroup = optionGroups[0].cloneNode(true);
                
                // Update input names and values
                const questionIndex = parseInt(newOptionGroup.querySelector('input[type="radio"]').name.match(/questions\[(\d+)\]/)[1]);
                newOptionGroup.querySelector('input[type="radio"]').value = newIndex;
                newOptionGroup.querySelector('input[type="text"]').name = `questions[${questionIndex}][options][${newIndex}][optionText]`;
                newOptionGroup.querySelector('input[type="text"]').value = '';
                newOptionGroup.querySelector('input[type="text"]').placeholder = `Option ${newIndex + 1}`;
                
                // Show remove button
                newOptionGroup.querySelector('.remove-option').style.display = 'block';
                
                // Add event listener to remove option
                newOptionGroup.querySelector('.remove-option').addEventListener('click', function() {
                    if (optionsContainer.querySelectorAll('.option-group').length > 2) {
                        this.closest('.option-group').remove();
                    } else {
                        alert('You need at least 2 options.');
                    }
                });
                
                // Add the new option before the add button
                addOptionBtn.parentNode.insertBefore(newOptionGroup, addOptionBtn);
            });
        }
        
        // Question type change event
        const questionType = questionCard.querySelector('.question-type');
        if (questionType) {
            questionType.dispatchEvent(new Event('change'));
        }
        
        // Remove option
        questionCard.querySelectorAll('.remove-option').forEach(btn => {
            btn.addEventListener('click', function() {
                const optionsContainer = this.closest('.options-container');
                if (optionsContainer.querySelectorAll('.option-group').length > 2) {
                    this.closest('.option-group').remove();
                } else {
                    alert('You need at least 2 options.');
                }
            });
        });
        
        // Question image preview
        const imageInput = questionCard.querySelector('.question-image');
        if (imageInput) {
            imageInput.addEventListener('change', function() {
                const preview = this.closest('.card-body').querySelector('.question-image-preview');
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    };
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }
    }
    
    // Form submission
    document.getElementById('edit-quiz-form').addEventListener('submit', function(e) {
        // Prepare question data
        const questions = [];
        
        document.querySelectorAll('.question-card').forEach((card, qIndex) => {
            const questionType = card.querySelector('.question-type').value;
            const questionText = card.querySelector('.question-text').value;
            const points = parseInt(card.querySelector('input[name^="questions"][name$="[points]"]').value) || 10;
            const timeLimit = parseInt(card.querySelector('input[name^="questions"][name$="[timeLimit]"]').value) || 30;
            
            const question = {
                questionText,
                questionType,
                points,
                timeLimit,
                options: []
            };
            
            if (questionType === 'multiple-choice' || questionType === 'true-false') {
                const optionInputs = card.querySelectorAll('input[name^="questions"][name$="[optionText]"]');
                const correctOptionInput = card.querySelector('input[type="radio"]:checked');
                const correctOptionIndex = correctOptionInput ? parseInt(correctOptionInput.value) : 0;
                
                optionInputs.forEach((input, index) => {
                    question.options.push({
                        optionText: input.value,
                        isCorrect: index === correctOptionIndex
                    });
                });
            } else if (questionType === 'short-answer') {
                question.correctAnswer = card.querySelector('input[name^="questions"][name$="[correctAnswer]"]').value;
            }
            
            questions.push(question);
        });
        
        // Add questions as hidden field
        const questionsInput = document.createElement('input');
        questionsInput.type = 'hidden';
        questionsInput.name = 'questions';
        questionsInput.value = JSON.stringify(questions);
        this.appendChild(questionsInput);
    });
});
</script>
